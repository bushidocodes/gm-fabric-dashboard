// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ThreadsGrid View matches snapshot 1`] = `
.c8 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: rgb(255,255,255);
  box-shadow: inset 0 -1px hsl(0,0%,92%);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  font-weight: 500;
  overflow: visible;
  width: 100%;
}

.c16 {
  -webkit-flex: 1 1 12%;
  -ms-flex: 1 1 12%;
  flex: 1 1 12%;
  text-align: left;
}

.c10 {
  -webkit-flex: 1 1 12%;
  -ms-flex: 1 1 12%;
  flex: 1 1 12%;
  text-align: left;
  padding-right: 16px;
  padding-top: 7px;
  padding-bottom: 7px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c10:first-child {
  padding-left: 16px;
}

.c9 {
  -webkit-flex: 1 1 12%;
  -ms-flex: 1 1 12%;
  flex: 1 1 12%;
  text-align: left;
  padding-right: 16px;
  padding-top: 7px;
  padding-bottom: 7px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  -webkit-flex: 0 1 5em;
  -ms-flex: 0 1 5em;
  flex: 0 1 5em;
}

.c9:first-child {
  padding-left: 16px;
}

.c11 {
  display: block;
  list-style: none;
  margin: 0;
  padding: 0;
}

.c13 {
  -webkit-flex: 1 1 12%;
  -ms-flex: 1 1 12%;
  flex: 1 1 12%;
  text-align: left;
  -webkit-flex: 0 1 5em;
  -ms-flex: 0 1 5em;
  flex: 0 1 5em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  text-align: center;
}

.c17 {
  -webkit-flex: 1 1 12%;
  -ms-flex: 1 1 12%;
  flex: 1 1 12%;
  text-align: left;
  -webkit-flex: 0 1 5em;
  -ms-flex: 0 1 5em;
  flex: 0 1 5em;
  -webkit-flex: 0 1 7em;
  -ms-flex: 0 1 7em;
  flex: 0 1 7em;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  text-align: right;
}

.c12 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: rgb(255,255,255);
  box-shadow: inset 0 -1px hsl(0,0%,92%);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  min-height: 36px;
  width: 100%;
  cursor: pointer;
}

.c12:hover {
  background-color: hsl(0,0%,98%);
}

.c12:focus {
  outline: -webkit-focus-ring-color auto 5px;
}

.c12:focus:active:hover {
  outline: 0;
}

.c12 > * {
  padding-right: 16px;
  padding-top: 7px;
  padding-bottom: 7px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c12 > *:first-child {
  padding-left: 16px;
}

.c15 {
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c14 {
  z-index: 1;
  height: 24px;
  width: 24px;
  color: rgb(10,171,42);
  word-spacing: 0;
  vertical-align: middle;
}

.c14:not(:root) {
  overflow: visible;
}

.c18 {
  z-index: 1;
  height: 24px;
  width: 24px;
  color: currentColor;
  word-spacing: 0;
  vertical-align: middle;
}

.c18:not(:root) {
  overflow: visible;
}

.c7 {
  display: block;
  font-family: Rubik,-apple-system,BlinkMacSystemFont,"Segoe UI","Roboto","Oxygen","Ubuntu","Cantarell","Fira Sans","Droid Sans","Helvetica Neue",sans-serif;
  margin-left: auto;
  margin-right: auto;
  max-width: 1300px;
  width: 100%;
}

.c2 {
  background-image: url(magnifier.svg);
  background-repeat: no-repeat;
  background-size: contain;
  position: relative;
  text-indent: 20px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: black;
  font-family: Nunito,-apple-system,BlinkMacSystemFont,"Segoe UI","Roboto","Oxygen","Ubuntu","Cantarell","Fira Sans","Droid Sans","Helvetica Neue",sans-serif;
  font-weight: 600;
  font-size: 14px;
  line-height: 1.4;
  text-align: left;
  text-transform: none;
  padding: 1.4px 4px;
  background-color: rgb(255,255,255);
  border-radius: 3px;
  border: 1px solid rgb(242,242,242);
  border-bottom-color: rgb(230,230,230);
  -webkit-user-select: auto;
  -moz-user-select: auto;
  -ms-user-select: auto;
  user-select: auto;
  box-shadow: inset 0 0 0 transparent,0 0 0 transparent,0 0 0 transparent;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-transition: all 0.3s ease;
  transition: all 0.3s ease;
}

.c2::-webkit-search-cancel-button {
  cursor: pointer;
}

.c2:hover {
  background-color: rgb(250,250,250);
  border-color: rgb(237,237,237);
  -webkit-transition: all 0.1s ease;
  transition: all 0.1s ease;
  border-bottom-color: rgb(217,217,217);
  color: black;
}

.c2:focus {
  outline: none;
  box-shadow: 0 0 0 2px rgb(10,171,42);
  z-index: 1;
}

.c2::-webkit-input-placeholder {
  color: currentColor;
  opacity: 1;
  text-align: center;
}

.c2::-moz-placeholder {
  color: currentColor;
  opacity: 1;
  text-align: center;
}

.c2:-ms-input-placeholder {
  color: currentColor;
  opacity: 1;
  text-align: center;
}

.c2::placeholder {
  color: currentColor;
  opacity: 1;
  text-align: center;
}

.c2::-ms-expand {
  background-color: transparent;
  border: 0;
}

.c5 {
  font-family: "Nunito",-apple-system,BlinkMacSystemFont,"Segoe UI","Roboto", "Oxygen","Ubuntu","Cantarell","Fira Sans","Droid Sans","Helvetica Neue", sans-serif;
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  font-size: 14px;
  font-weight: 600;
  height: 28px;
  max-width: 125px;
  position: relative;
  width: 100%;
  z-index: 1020;
}

.c5 .Select-control {
  height: 28px !important;
}

.c5 .Select-control .Select-placeholder {
  line-height: 28px;
}

.c5 .Select-control .Select-value {
  line-height: 28px !important;
}

.c5 .Select-control .Select-value .Select-value-label {
  line-height: 28px;
}

.c5 .Select-control .Select-input {
  height: 28px;
}

.c6 {
  margin-left: 4px;
  opacity: 0.6;
  font-size: 11px;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: hsl(0,0%,96%);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  height: 36px;
  margin-left: auto;
  margin-right: auto;
  max-width: 1300px;
  padding: 2px 16px;
}

.c1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 33%;
  -ms-flex: 1 1 33%;
  flex: 1 1 33%;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 33%;
  -ms-flex: 1 1 33%;
  flex: 1 1 33%;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 33%;
  -ms-flex: 1 1 33%;
  flex: 1 1 33%;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

@media all and (min-width:1300px) {
  .c0:after {
    background-color: inherit;
    content: "";
    height: inherit;
    left: 0;
    pointer-events: none;
    position: absolute;
    right: 0;
    top: 0;
    z-index: 1;
  }

  .c0 > * {
    position: relative;
    z-index: 2;
  }
}

<div>
  <div
    className="c0"
  >
    <div
      className="c1"
    >
      <form
        onSubmit={[Function]}
      >
        <input
          aria-label="Search Threads"
          className="c2"
          onChange={[Function]}
          placeholder="Search Threads"
          type="search"
          value=""
        />
      </form>
    </div>
    <div
      className="c3"
    />
    <div
      className="c4"
    >
      <div
        className="Select c5 Select--single is-searchable has-value"
        style={undefined}
      >
        <input
          disabled={false}
          name="form-field-group-by"
          type="hidden"
          value="none"
        />
        <div
          className="Select-control"
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={undefined}
        >
          <span
            className="Select-multi-value-wrapper"
            id="react-select-4--value"
          >
            <div
              className="Select-value"
              style={undefined}
              title={undefined}
            >
              <span
                aria-selected="true"
                className="Select-value-label"
                id="react-select-4--value-item"
                role="option"
              >
                <span>
                  <span>
                    Group
                     
                  </span>
                  <span
                    className="c6"
                  >
                    None
                  </span>
                </span>
              </span>
            </div>
            <div
              className="Select-input"
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-activedescendant="react-select-4--value"
                aria-describedby={undefined}
                aria-expanded="false"
                aria-haspopup="false"
                aria-label={undefined}
                aria-labelledby={undefined}
                aria-owns=""
                className={undefined}
                id={undefined}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                required={false}
                role="combobox"
                style={
                  Object {
                    "boxSizing": "content-box",
                    "width": "5px",
                  }
                }
                tabIndex={undefined}
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </span>
          <span
            className="Select-arrow-zone"
            onMouseDown={[Function]}
          >
            <span
              className="Select-arrow"
              onMouseDown={[Function]}
            />
          </span>
        </div>
      </div>
      <div
        className="Select c5 Select--single is-searchable has-value"
        style={undefined}
      >
        <input
          disabled={false}
          name="form-field-sort-by"
          type="hidden"
          value="id"
        />
        <div
          className="Select-control"
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={undefined}
        >
          <span
            className="Select-multi-value-wrapper"
            id="react-select-5--value"
          >
            <div
              className="Select-value"
              style={undefined}
              title={undefined}
            >
              <span
                aria-selected="true"
                className="Select-value-label"
                id="react-select-5--value-item"
                role="option"
              >
                <span>
                  <span>
                    Sort
                     
                  </span>
                  <span
                    className="c6"
                  >
                    ID
                  </span>
                </span>
              </span>
            </div>
            <div
              className="Select-input"
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-activedescendant="react-select-5--value"
                aria-describedby={undefined}
                aria-expanded="false"
                aria-haspopup="false"
                aria-label={undefined}
                aria-labelledby={undefined}
                aria-owns=""
                className={undefined}
                id={undefined}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                required={false}
                role="combobox"
                style={
                  Object {
                    "boxSizing": "content-box",
                    "width": "5px",
                  }
                }
                tabIndex={undefined}
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </span>
          <span
            className="Select-arrow-zone"
            onMouseDown={[Function]}
          >
            <span
              className="Select-arrow"
              onMouseDown={[Function]}
            />
          </span>
        </div>
      </div>
    </div>
  </div>
  <div
    className="c7"
  >
    <div
      className="c8"
    >
      <div
        className="c9"
        style={
          Object {
            "textAlign": "center",
          }
        }
      >
        State
      </div>
      <div
        className="c9"
        style={
          Object {
            "textAlign": "center",
          }
        }
      >
        ID
      </div>
      <div
        className="c10"
      >
        Name
      </div>
      <div
        className="c9"
        style={
          Object {
            "flex": "0 1 7em",
            "textAlign": "right",
          }
        }
      >
        Daemon
      </div>
      <div
        className="c9"
        style={
          Object {
            "flex": "0 1 7em",
            "textAlign": "right",
          }
        }
      >
        Priority
      </div>
      <div
        className="c9"
      />
    </div>
    <ol
      className="c11"
    >
      <li
        className="c12"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="link"
        tabIndex={0}
      >
        <div
          className="c13"
        >
          <svg
            aria-labelledby="ariaLabelledby"
            className="c14"
            focusable="false"
            version="1.1"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
            xmlnsXlink="http://www.w3.org/1999/xlink"
          >
            <g
              className="iconBackground"
              fill="rgb(10, 171, 42)"
              fillOpacity=".3"
              fillRule="evenodd"
              id="Square"
            >
              <path
                d="M12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 Z"
                id="BackgroundCircleSmall"
              />
            </g>
            <g
              className="c15"
              fill="currentColor"
              title=""
            >
              <title>
                
              </title>
              <path
                d="M11,9.86851709 L11,14.1314829 L14.1972244,12 L11,9.86851709 Z M16,12 L10,16 L10,8 L16,12 Z"
                id="GlyphRunningSmall"
              />
            </g>
          </svg>
        </div>
        <div
          className="c13"
        >
          2
        </div>
        <div
          className="c16"
        >
          Test Runnable
        </div>
        <div
          className="c17"
        >
          Yes
        </div>
        <div
          className="c17"
        >
          8
        </div>
        <div
          className="c13"
        >
          <svg
            aria-labelledby="ariaLabelledby"
            className="c18"
            focusable="false"
            version="1.1"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
            xmlnsXlink="http://www.w3.org/1999/xlink"
          >
            <g
              className="c15"
              fill="currentColor"
              title=""
            >
              <title>
                
              </title>
              <g
                className="glyph"
                fill="currentColor"
                transform="translate(0 0) scale(1)"
              >
                <path
                  d="M7,7 L19,7 L19,9 L7,9 L7,7 Z M6,11 L18,11 L18,13 L6,13 L6,11 Z M5,15 L17,15 L17,17 L5,17 L5,15 Z"
                  id="shape"
                />
              </g>
            </g>
          </svg>
        </div>
      </li>
    </ol>
  </div>
</div>
`;
